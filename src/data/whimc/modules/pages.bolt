#> pages.bolt
#   Loads all pages for the barrelbot editor


import whimc:utils as utils
import whimc:ui_buttons as buttons
import PIL.Image as Image

append function whimc:barrelbot/editor/edit_wand/edit_mode/pages/register_pages:
    data modify storage whimc:const WandPages set value []


# Barrelbot
barrelbot_page = utils.WandPage("barrelbot")
#barrelbot_page.add_button(buttons.swap_mode, [0, -0.25])
barrelbot_page.add_button_array([buttons.lock, buttons.swap_mode, buttons.set_bot_success_condition], [0, -0.25])
barrelbot_page.add_button(buttons.close, [0, -0.65])
barrelbot_page.add_text([0.0, 0.5, 0.1], [1.0, 1.0, 1.0], '{"text":"Barrelbot","color":"yellow"}')

# Sub-page: Barrelbot success conditions
#utils.multipage_array([buttons.swap_mode, buttons.swap_mode, buttons.swap_mode, buttons.swap_mode, buttons.swap_mode], 2, "test", "Test", "hi")
#go_to_test = utils.WandButton("go_to_test", [0.5, 0.5], 130000)
#go_to_test.page_link = "test_0"
#go_to_test.hover_text = "Open test menu"
#barrelbot_page.add_button(go_to_test, [1.5, 0.3])

# Puzzle button
puzzle_page = utils.WandPage("puzzle")
puzzle_page.add_button(buttons.close, [0, -0.65])

puzzle_page.add_button_array([
    buttons.toggle_size_editor,
    buttons.set_success_condition,
    buttons.reset_puzzle,
    buttons.name_puzzle,
    buttons.propagate
], [0, -0.25])

# Function
function_page = utils.WandPage("function")
function_page.add_button(buttons.lock, [0, -0.25])
function_page.add_button(buttons.close, [0, -0.65])

# General
general_page = utils.WandPage("general")
general_page.add_text([0.0, 0.5, 0.1], [1.0, 1.0, 1.0], '{"text":"Barrelbot Utilities","color":"yellow"}')
general_page.add_button_array([
    buttons.paste,
    buttons.reset_all,
    buttons.instruction_menu,
    buttons.block_menu
], [0, -0.25])

from beet import Texture
from beet import Context

# Instructions
instructions_page = utils.WandPage("instructions")
instructions_page.add_text([0.0, 0.5, 0.1], [1.0, 1.0, 1.0], '{"text":"Instructions","color":"yellow"}')
instruction_buttons = []
f = open("temp/instructions.txt", "rt")
for line in f:
    parsed_line = line.split(',')
    id = parsed_line[0]
    display_name = parsed_line[1][0:-1]

    instruction_button = utils.WandButton("instructions/" + id, [0.2, 0.2])
    instruction_button.hover_text = display_name
    instruction_button.command = f"function whimc:barrelbot/instructions/{id}/give"
    instruction_buttons.append(instruction_button)

    # Generate button texture
    #1 Load template image #
    #2 Load instruction texture
    #3 Paste instruction onto template
    #4 Save to proper location
    ui_template = Image.open(ctx.assets.textures["whimc:barrelbot/ui/template"].source_path).convert("RGBA")
    instruction_texture = Image.open(ctx.assets.textures[f"whimc:barrelbot/instructions/{id}"].source_path).convert("RGBA")
    ui_template.paste(instruction_texture, (0, 0), instruction_texture)
    ctx.assets[f"whimc:barrelbot/ui/instructions/{id}"] = Texture(ui_template)


f.close()
instructions_page.add_button_array(instruction_buttons, [0.0, 0.0])



# Blocks
blocks_page = utils.WandPage("blocks")

