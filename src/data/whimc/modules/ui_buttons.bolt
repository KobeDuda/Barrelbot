# Defines all buttons for the wand UI pages and their functions

import whimc:utils as utils

## Barrelbot

# Swap mode
swap_mode = utils.WandButton("swap_mode", [0.3, 0.3])
with swap_mode.create_function():
    scoreboard players operation $temp whimc.barrelbot.edit_instance_id = @s whimc.barrelbot.edit_instance_id
    execute as @e[type=item_display,tag=whimc.barrelbot,predicate=whimc:barrelbot/match_edit_id] at @s run function whimc:barrelbot/dispenser_bot/toggle

swap_mode.hover_text = "Toggle Dispenser Mode"

# Bot success condition
set_bot_success_condition = utils.WandButton("set_bot_success_condition", [0.3, 0.3])
set_bot_success_condition.page_link = "bot_success_conditions_0"
set_bot_success_condition.hover_text = "Set Success Condition"

# Toggle bot lock
lock_bot = utils.WandButton("lock_bot", [0.3, 0.3])
with lock_bot.create_function():
    scoreboard players operation $temp whimc.barrelbot.edit_instance_id = @s whimc.barrelbot.edit_instance_id
    execute as @e[type=item_display,tag=whimc.barrelbot,predicate=whimc:barrelbot/match_edit_id] at @s:
        execute store result score $locked whimc.dummy if entity @s[tag=whimc.barrelbot.locked]
        execute if score $locked whimc.dummy matches 0:
            tag @s add whimc.barrelbot.locked
            data modify block ~ ~ ~ Lock set value "_LOCKTYPE: PERMALOCK"
        execute if score $locked whimc.dummy matches 1:
            tag @s remove whimc.barrelbot.locked
            data remove block ~ ~ ~ Lock
        
    execute if score $locked whimc.dummy matches 0 run tellraw @s {"text":"Bot is now locked","color":"gold"}
    execute if score $locked whimc.dummy matches 1 run tellraw @s {"text":"Bot is now unlocked","color":"gray"}

lock_bot.hover_text = "Lock/Unlock Bot"

## Puzzle

# Success condition
set_success_condition = utils.WandButton("set_success_condition", [0.3, 0.3])
set_success_condition.page_link = "success_conditions_0"
set_success_condition.hover_text = "Set Success Condition"

# Toggle size editor
toggle_size_editor = utils.WandButton("toggle_size_editor", [0.3, 0.3])
with toggle_size_editor.create_function():
    scoreboard players operation $temp whimc.barrelbot.edit_instance_id = @s whimc.barrelbot.edit_instance_id
    execute as @e[type=text_display,limit=1,tag=whimc.barrelbot.puzzle_manager,predicate=whimc:barrelbot/match_edit_id] on passengers at @s run function whimc:barrelbot/editor/toggle_edit_mode

toggle_size_editor.hover_text = "Toggle Size Editor"

# Reset puzzle
reset_puzzle = utils.WandButton("reset_puzzle", [0.3, 0.3])
reset_puzzle.hover_text = "Reset Puzzle"
with reset_puzzle.create_function():
    scoreboard players operation $temp whimc.barrelbot.edit_instance_id = @s whimc.barrelbot.edit_instance_id
    execute as @e[type=text_display,tag=whimc.barrelbot.puzzle_manager,limit=1,predicate=whimc:barrelbot/match_edit_id] at @s run function whimc:barrelbot/manager/reset_puzzle

# Name puzzle
name_puzzle = utils.WandButton("name_puzzle", [0.3, 0.3])
name_puzzle.hover_text = "Assign Puzzle Name"
with name_puzzle.set_text_input():
    scoreboard players operation $temp whimc.barrelbot.edit_instance_id = @s whimc.barrelbot.edit_instance_id
    execute as @e[type=text_display,tag=whimc.barrelbot.puzzle_manager,limit=1,predicate=whimc:barrelbot/match_edit_id] store result storage whimc:macro puzzle_id int 1 run scoreboard players get @s whimc.barrelbot.puzzle_type_id
    with storage whimc:macro:
        $execute unless data storage whimc:storage puzzle_names[{puzzle_id:$(puzzle_id)}] run data modify storage whimc:storage puzzle_names append value {puzzle_id:$(puzzle_id)}
        $data modify storage whimc:storage puzzle_names[{puzzle_id:$(puzzle_id)}].Name set from storage kmc:io text_input[0]
    tellraw @s ["",{"text":"[Notice] Your puzzle is now named ","color":"gray"},{"nbt":"text_input[0]","storage":"kmc:io","color":"gold"}]
    
# Propagate Changes
propagate = utils.WandButton("propagate_changes", [0.3, 0.3])
propagate.hover_text = "Propagate changes to cloned puzzles"
propagate.command = "function whimc:barrelbot/dev/propagate_changes"



## Function

lock = utils.WandButton("lock", [0.3, 0.3])
with lock.create_function():
    scoreboard players operation $temp whimc.barrelbot.edit_instance_id = @s whimc.barrelbot.edit_instance_id
    execute as @e[type=marker,tag=whimc.barrelbot.function,predicate=whimc:barrelbot/match_edit_id] at @s positioned ~ ~1 ~ as @e[type=item_display,tag=whimc.function_display,distance=..0.001] run function whimc:barrelbot/functions/interact/lock
    execute if score $locked whimc.dummy matches 0 run tellraw @s {"text":"Function is now locked","color":"gold"}
    execute if score $locked whimc.dummy matches 1 run tellraw @s {"text":"Function is now unlocked","color":"gray"}

lock.hover_text = "Lock/Unlock Function"

## Wand Menu

# Paste puzzle
paste = utils.WandButton("paste", [0.3, 0.3])
paste.hover_text = "Paste linked puzzle"
paste.command = "function whimc:barrelbot/dev/clone/paste_puzzle"

# Reset all puzzles
reset_all = utils.WandButton("reset_all", [0.3, 0.3])
reset_all.hover_text = "Reset all puzzles"
reset_all.command = "function whimc:barrelbot/dev/reset_all_puzzles"

# Instruction menu
instruction_menu = utils.WandButton("instruction_menu", [0.3, 0.3])
instruction_menu.hover_text = "Get instruction items"
instruction_menu.page_link = "instructions"

# Block menu
block_menu = utils.WandButton("block_menu", [0.3, 0.3])
block_menu.hover_text = "Get blocks"
block_menu.page_link = "blocks"

## General

close = utils.WandButton("close", [0.25, 0.25])
with close.create_function():
    execute on vehicle run function whimc:barrelbot/editor/edit_wand/delete_edit_instance
    ride @s dismount
    tp @s ~ ~ ~
    tag @s remove whimc.in_edit_menu
    title @s actionbar ""

close.hover_text = "Exit Menu"